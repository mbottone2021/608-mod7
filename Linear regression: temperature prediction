c = lambda f: 5/9 * (f - 32)

temps = [(f, c(f)) for f in range(0, 101, 10)]

import pandas as pd

temps_df = pd.DataFrame(temps, columns=['Fahrenheit', 'Celcius'])
axes = temps_df.plot(x='Fahrenheit', y='Celcius', style='.-')
y_label = axes.set_ylabel('Celcius')
nyc = pd.read_csv('ave_hi_nyc_jan_1895-2018.csv')

print(nyc.head())
print(' ')
print(nyc.tail())
print(' ')

nyc.columns = ['Date', 'Temperature', 'Anomaly']
print(nyc.head(3))
print(' ')

nyc.Date.dtype
print(' ')

nyc.Date = nyc.Date.floordiv(100)
print(nyc.head(3))

print(' ')

pd.set_option('precision', 2)
nyc.Temperature.describe()

print(' ')

from scipy import stats

linear_regression = stats.linregress(x=nyc.Date,
                                     y=nyc.Temperature)

print('slope= ', linear_regression.slope)
print('intercept= ', linear_regression.intercept)

print(' ')

print('2019= ', linear_regression.slope * 2019 + linear_regression.intercept)
print('1890= ', linear_regression.slope * 1890 + linear_regression.intercept)

print(' ')

import seaborn as sns
sns.set_style('whitegrid')
axes = sns.regplot(x=nyc.Date, y=nyc.Temperature)
axes.set_ylim(10, 70)

print(' ')

year = 2021
slope = linear_regression.slope
intercept = linear_regression.intercept
temperature = slope * year + intercept
print('2021 temp = ', temperature)
